{
	"info": {
		"_postman_id": "f748c8a4-29dc-4542-9fbb-a59ed924d434",
		"name": "Drug Product Database (DPD)",
		"description": "The DPD contains product specific information on drugs approved for use in Canada. The database is managed by Health Canada and includes human pharmaceutical and biological drugs, veterinary drugs, radiopharmaceutical drugs and disinfectant products. It contains approximately 47,000 products that are currently approved, marketed, dormant or cancelled.\n\nHuman, veterinary, disinfectants and Schedule C drugs (e.g. radiopharmaceutical products) approved products will be available in the DPD online at the time of authorization, with the exception of three monographed product groups under Division 1, Part C of the Food and Drug Regulations: sunscreen (sunscreens, lipstick making a SPF claim, cosmetic-like products with sunscreen claims, etc.), anti-dandruff shampoo, and hard surface disinfectants. For these products, applications filed after June 15, 2015, there may be a six month delay after approval for the inclusion in the DPD online.\n\nHealth Canada is the federal regulator of therapeutic products and does not provide medical advice on the use of the products identified in this database. For information related to treatment options, choices of medications and their uses, illnesses, side effects or drug interactions, please contact your health care professional. For information on where these products are sold, please contact the individual company directly.\n\n\nContact Support:\n Email: open-ouvert@tbs-sct.gc.ca",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/activeingredient",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "12052cbf-114d-4042-bb30-0469a2a448c1",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							"    \"items\": {\r",
							"        \"required\": [\r",
							"            \"dosage_unit\",\r",
							"            \"dosage_value\",\r",
							"            \"drug_code\",\r",
							"            \"ingredient_name\",\r",
							"            \"strength\",\r",
							"            \"strength_unit\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"dosage_unit\": {\r",
							"                \"$id\": \"#/items/properties/dosage_unit\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"dosage_value\": {\r",
							"                \"$id\": \"#/items/properties/dosage_value\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"drug_code\": {\r",
							"                \"$id\": \"#/items/properties/drug_code\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"ingredient_name\": {\r",
							"                \"$id\": \"#/items/properties/ingredient_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"strength\": {\r",
							"                \"$id\": \"#/items/properties/strength\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"strength_unit\": {\r",
							"                \"$id\": \"#/items/properties/strength_unit\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "21c6d77c-e832-4a56-aaec-03d5ba41b405",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"activeingredient\");\r",
							"pm.variables.set(\"ingredientname\",\"BENZALKONIUM CHLORIDE\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "d2b34316bbb9950755c8985742eeb020",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&ingredientname={{ingredientname}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}"
						},
						{
							"key": "ingredientname",
							"value": "{{ingredientname}}"
						}
					]
				},
				"description": "Returns all active ingredients."
			},
			"response": [
				{
					"name": "Returns a list of all active ingredients, or if an ID is provided, the list of all active ingredients that correspond to the given drug product code",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/activeingredient?lang=en&type=json&id=<string>&ingredientname=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activeingredient"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "ingredientname",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"dosage_unit\": \"pariatur\",\n  \"dosage_value\": \"sed id\",\n  \"drug_code\": -36833454,\n  \"ingredient_name\": \"aliquip reprehenderit cillum labore\",\n  \"strength\": \"culpa fugiat adipisicing\",\n  \"strength_unit\": \"dolore tempor\"\n },\n {\n  \"dosage_unit\": \"deserunt ex\",\n  \"dosage_value\": \"enim fugiat dolore voluptate sit\",\n  \"drug_code\": 37342403,\n  \"ingredient_name\": \"fugiat quis\",\n  \"strength\": \"voluptate ut\",\n  \"strength_unit\": \"tempor\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/activeingredient?lang=en&type=json&id=<string>&ingredientname=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activeingredient"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "ingredientname",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/activeingredient?lang=en&type=json&id=<string>&ingredientname=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activeingredient"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "ingredientname",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/activeingredient with id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ed25b08e-8aaf-464b-9a20-27560f25c078",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							"    \"items\": {\r",
							"        \"required\": [\r",
							"            \"dosage_unit\",\r",
							"            \"dosage_value\",\r",
							"            \"drug_code\",\r",
							"            \"ingredient_name\",\r",
							"            \"strength\",\r",
							"            \"strength_unit\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"dosage_unit\": {\r",
							"                \"$id\": \"#/items/properties/dosage_unit\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"dosage_value\": {\r",
							"                \"$id\": \"#/items/properties/dosage_value\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"drug_code\": {\r",
							"                \"$id\": \"#/items/properties/drug_code\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"ingredient_name\": {\r",
							"                \"$id\": \"#/items/properties/ingredient_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"strength\": {\r",
							"                \"$id\": \"#/items/properties/strength\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"strength_unit\": {\r",
							"                \"$id\": \"#/items/properties/strength_unit\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"if (pm.globals.get(\"language\") == \"en\"){\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();    \r",
							"    pm.expect(jsonData[0].drug_code).to.eql(pm.variables.get(\"id\"));   \r",
							"    pm.expect(jsonData[0].ingredient_name).to.eql(\"BENZALKONIUM CHLORIDE\");   \r",
							"    pm.expect(jsonData[0].dosage_unit).to.eql(\"W/W\");   \r",
							"    pm.expect(jsonData[1].drug_code).to.eql(pm.variables.get(\"id\"));   \r",
							"    pm.expect(jsonData[1].ingredient_name).to.eql(\"ALKYL DIMETHYL ETHYLBENZYL AMMONIUM CHLORIDE\");   \r",
							"    pm.expect(jsonData[1].dosage_unit).to.eql(\"W/W\");    \r",
							"    pm.globals.set(\"language\",\"fr\"); \r",
							"});\r",
							"}\r",
							"else{\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();    \r",
							"     pm.expect(jsonData[0].drug_code).to.eql(pm.variables.get(\"id\"));   \r",
							"     pm.expect(jsonData[0].ingredient_name).to.eql(\"Chlorure de benzalkonium\");   \r",
							"     pm.expect(jsonData[0].dosage_unit).to.eql(\"p/p\");   \r",
							"     pm.expect(jsonData[1].drug_code).to.eql(pm.variables.get(\"id\"));   \r",
							"     pm.expect(jsonData[1].ingredient_name).to.eql(\"Chlorure d'alkyl diméthyl éthylbenzyl ammonium\");   \r",
							"     pm.expect(jsonData[1].dosage_unit).to.eql(\"p/p\");    \r",
							"     pm.globals.set(\"language\",\"en\");\r",
							"});\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "1fc9fa4c-f182-4f0e-b670-14836a074e95",
						"exec": [
							"//pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"activeingredient\");\r",
							"pm.variables.set(\"ingredientname\",\"BENZALKONIUM CHLORIDE\");\r",
							"pm.variables.set(\"id\",63057);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "d2b34316bbb9950755c8985742eeb020",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&ingredientname={{ingredientname}}&id={{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}"
						},
						{
							"key": "ingredientname",
							"value": "{{ingredientname}}"
						},
						{
							"key": "id",
							"value": "{{id}}"
						}
					]
				},
				"description": "Returns all active ingredients."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/activeingredient?lang=en&type=json&id=<string>&ingredientname=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activeingredient"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "ingredientname",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all active ingredients, or if an ID is provided, the list of all active ingredients that correspond to the given drug product code",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/activeingredient?lang=en&type=json&id=<string>&ingredientname=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activeingredient"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "ingredientname",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"dosage_unit\": \"pariatur\",\n  \"dosage_value\": \"sed id\",\n  \"drug_code\": -36833454,\n  \"ingredient_name\": \"aliquip reprehenderit cillum labore\",\n  \"strength\": \"culpa fugiat adipisicing\",\n  \"strength_unit\": \"dolore tempor\"\n },\n {\n  \"dosage_unit\": \"deserunt ex\",\n  \"dosage_value\": \"enim fugiat dolore voluptate sit\",\n  \"drug_code\": 37342403,\n  \"ingredient_name\": \"fugiat quis\",\n  \"strength\": \"voluptate ut\",\n  \"strength_unit\": \"tempor\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/activeingredient?lang=en&type=json&id=<string>&ingredientname=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activeingredient"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "ingredientname",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/company",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8c6f0043-64f5-4ad1-b33e-9ede6e8e3bb9",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							"\"items\": {\r",
							"        \"required\": [\r",
							"            \"city_name\",\r",
							"            \"company_code\",\r",
							"            \"company_name\",\r",
							"            \"company_type\",\r",
							"            \"country_name\",\r",
							"            \"post_office_box\",\r",
							"            \"postal_code\",\r",
							"            \"province_name\",\r",
							"            \"street_name\",\r",
							"            \"suite_number\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"city_name\": {\r",
							"                \"$id\": \"#/items/properties/city_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"company_code\": {\r",
							"                \"$id\": \"#/items/properties/company_code\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"company_name\": {\r",
							"                \"$id\": \"#/items/properties/company_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"company_type\": {\r",
							"                \"$id\": \"#/items/properties/company_type\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"country_name\": {\r",
							"                \"$id\": \"#/items/properties/country_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"post_office_box\": {\r",
							"                \"$id\": \"#/items/properties/post_office_box\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"postal_code\": {\r",
							"                \"$id\": \"#/items/properties/postal_code\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"province_name\": {\r",
							"                \"$id\": \"#/items/properties/province_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"street_name\": {\r",
							"                \"$id\": \"#/items/properties/street_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"suite_number\": {\r",
							"                \"$id\": \"#/items/properties/suite_number\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "61b19084-33dc-42e5-88f2-75910f4700bd",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"company\");\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "d2b34316bbb9950755c8985742eeb020",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						}
					]
				},
				"description": "Returns all companies."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/company?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"company"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all companies, or if an ID is provided, the list of all companies that correspond to the given company code",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/company?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"company"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"city_name\": \"dolore\",\n  \"company_code\": 84735608,\n  \"company_name\": \"dolore mollit exercitation Excepteur ullamco\",\n  \"company_type\": \"eu ea\",\n  \"country_name\": \"ipsum\",\n  \"post_office_box\": \"sint aute velit\",\n  \"postal_code\": \"eu\",\n  \"province_name\": \"reprehenderit veniam in laborum occaecat\",\n  \"street_number\": \"labore consequat dolore\",\n  \"suite_number\": \"enim ipsum pariatur\"\n },\n {\n  \"city_name\": \"esse anim\",\n  \"company_code\": -43103553,\n  \"company_name\": \"aliqua in\",\n  \"company_type\": \"incididunt tempor Excepteur fugiat \",\n  \"country_name\": \"eiusmod ipsum culpa\",\n  \"post_office_box\": \"fugiat elit magna enim\",\n  \"postal_code\": \"dolor in ut proident\",\n  \"province_name\": \"id mollit commodo irure\",\n  \"street_number\": \"id ullamco culpa\",\n  \"suite_number\": \"sit sint consectetur laborum\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/company?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"company"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/company with id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2ff48004-83cc-45d3-9ff5-76cea0de77f7",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							" \"required\": [\r",
							"        \"city_name\",\r",
							"        \"company_code\",\r",
							"        \"company_name\",\r",
							"        \"company_type\",\r",
							"        \"country_name\",\r",
							"        \"post_office_box\",\r",
							"        \"postal_code\",\r",
							"        \"province_name\",\r",
							"        \"street_name\",\r",
							"        \"suite_number\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"city_name\": {\r",
							"            \"$id\": \"#/properties/city_name\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"company_code\": {\r",
							"            \"$id\": \"#/properties/company_code\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"company_name\": {\r",
							"            \"$id\": \"#/properties/company_name\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"company_type\": {\r",
							"            \"$id\": \"#/properties/company_type\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"country_name\": {\r",
							"            \"$id\": \"#/properties/country_name\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"post_office_box\": {\r",
							"            \"$id\": \"#/properties/post_office_box\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"postal_code\": {\r",
							"            \"$id\": \"#/properties/postal_code\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"province_name\": {\r",
							"            \"$id\": \"#/properties/province_name\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"street_name\": {\r",
							"            \"$id\": \"#/properties/street_name\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"suite_number\": {\r",
							"            \"$id\": \"#/properties/suite_number\",\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"object\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"if (pm.globals.get(\"language\") == \"en\"){\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();    \r",
							"   pm.expect(jsonData.company_code).to.eql(17592);   \r",
							"     pm.expect(jsonData.city_name).to.eql(\"Bridgewater\");    \r",
							"     pm.expect(jsonData.company_name).to.eql(\"KRAMER LABORATORIES, INC\");   \r",
							"     pm.expect(jsonData.company_type).to.eql(\"DIN OWNER\");  \r",
							"     pm.expect(jsonData.country_name).to.eql(\"United States\");   \r",
							"     pm.expect(jsonData.postal_code).to.eql(\"08807\");   \r",
							"     pm.expect(jsonData.province_name).to.eql(\"New Jersey\");   \r",
							"     pm.expect(jsonData.street_name).to.eql(\"440 Route 22 East, Suite 210\");   \r",
							"     pm.globals.set(\"language\",\"fr\"); \r",
							"});\r",
							"}\r",
							"else{\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();    \r",
							"     pm.expect(jsonData.company_code).to.eql(17592);   \r",
							"     pm.expect(jsonData.city_name).to.eql(\"Bridgewater\");    \r",
							"     pm.expect(jsonData.company_name).to.eql(\"KRAMER LABORATORIES, INC\");   \r",
							"     pm.expect(jsonData.company_type).to.eql(\"DIN OWNER\");  \r",
							"     pm.expect(jsonData.country_name).to.eql(\"ÉTATS UNIS\");   \r",
							"     pm.expect(jsonData.postal_code).to.eql(\"08807\");   \r",
							"     pm.expect(jsonData.province_name).to.eql(\"NEW JERSEY\");   \r",
							"     pm.expect(jsonData.street_name).to.eql(\"440 Route 22 East, Suite 210\");   \r",
							"     pm.globals.set(\"language\",\"en\");\r",
							"});\r",
							"}\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "36a7d690-a690-449f-993d-3e8bc15e86fa",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"company\");\r",
							"pm.variables.set(\"id\",\"17592\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "d2b34316bbb9950755c8985742eeb020",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&id={{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						},
						{
							"key": "id",
							"value": "{{id}}"
						}
					]
				},
				"description": "Returns all companies."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/company?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"company"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/company?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"company"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all companies, or if an ID is provided, the list of all companies that correspond to the given company code",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/company?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"company"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"city_name\": \"dolore\",\n  \"company_code\": 84735608,\n  \"company_name\": \"dolore mollit exercitation Excepteur ullamco\",\n  \"company_type\": \"eu ea\",\n  \"country_name\": \"ipsum\",\n  \"post_office_box\": \"sint aute velit\",\n  \"postal_code\": \"eu\",\n  \"province_name\": \"reprehenderit veniam in laborum occaecat\",\n  \"street_number\": \"labore consequat dolore\",\n  \"suite_number\": \"enim ipsum pariatur\"\n },\n {\n  \"city_name\": \"esse anim\",\n  \"company_code\": -43103553,\n  \"company_name\": \"aliqua in\",\n  \"company_type\": \"incididunt tempor Excepteur fugiat \",\n  \"country_name\": \"eiusmod ipsum culpa\",\n  \"post_office_box\": \"fugiat elit magna enim\",\n  \"postal_code\": \"dolor in ut proident\",\n  \"province_name\": \"id mollit commodo irure\",\n  \"street_number\": \"id ullamco culpa\",\n  \"suite_number\": \"sit sint consectetur laborum\"\n }\n]"
				}
			]
		},
		{
			"name": "/drugProduct with status",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "245df5d9-fbb7-4658-a446-d9dd2d0c3f1b",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							"        \"items\": {\r",
							"        \"required\": [\r",
							"            \"drug_code\",\r",
							"            \"class_name\",\r",
							"            \"drug_identification_number\",\r",
							"            \"brand_name\",\r",
							"            \"descriptor\",\r",
							"            \"number_of_ais\",\r",
							"            \"ai_group_no\",\r",
							"            \"company_name\",\r",
							"            \"last_update_date\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"drug_code\": {\r",
							"                \"$id\": \"#/items/properties/drug_code\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"class_name\": {\r",
							"                \"$id\": \"#/items/properties/class_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"drug_identification_number\": {\r",
							"                \"$id\": \"#/items/properties/drug_identification_number\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"brand_name\": {\r",
							"                \"$id\": \"#/items/properties/brand_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"descriptor\": {\r",
							"                \"$id\": \"#/items/properties/descriptor\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"number_of_ais\": {\r",
							"                \"$id\": \"#/items/properties/number_of_ais\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"ai_group_no\": {\r",
							"                \"$id\": \"#/items/properties/ai_group_no\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"company_name\": {\r",
							"                \"$id\": \"#/items/properties/company_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"last_update_date\": {\r",
							"                \"$id\": \"#/items/properties/last_update_date\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f426d2a4-0219-4fe4-8ac0-ca7a5ef62654",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"drugproduct\");\r",
							"pm.variables.set(\"status\",\"2\");\r",
							"\r",
							"//1 - Approved\r",
							"//2 - Marketed\r",
							"//3 - Cancelled Pre Market\r",
							"//4 - Cancelled Post Market\r",
							"//6 - Dormant\r",
							"//9 - Cancelled (Unreturned Annual)\r",
							"//10 - Cancelled (Safety Issue)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "d2b34316bbb9950755c8985742eeb020",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&status={{status}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}"
						},
						{
							"key": "status",
							"value": "{{status}}"
						}
					]
				},
				"description": "Returns all drug products."
			},
			"response": [
				{
					"name": "Returns a list of all matching drug products",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drugproduct?lang=en&type=json&id=<string>&din=<string>&brandname=<string>&status=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drugproduct"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "din",
									"value": "<string>"
								},
								{
									"key": "brandname",
									"value": "<string>"
								},
								{
									"key": "status",
									"value": "<integer>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"ai_group_no\": \"amet\",\n  \"brand_name\": \"ipsum amet deserunt\",\n  \"class_name\": \"dolore consequat\",\n  \"descriptor\": \"aliquip in ut eu\",\n  \"drug_code\": 37523909,\n  \"drug_identification_number\": \"Ut occaecat in\",\n  \"number_of_ais\": \"ad dolor ea fugiat\",\n  \"company_name\": \"Excepteur do\",\n  \"last_update_date\": \"enim do mollit\"\n },\n {\n  \"ai_group_no\": \"sed\",\n  \"brand_name\": \"reprehenderit culpa\",\n  \"class_name\": \"sint sunt\",\n  \"descriptor\": \"incididunt ut laborum ullamco\",\n  \"drug_code\": 91739034,\n  \"drug_identification_number\": \"nostrud nisi dolor\",\n  \"number_of_ais\": \"dolor esse\",\n  \"company_name\": \"commodo dolore nisi ut\",\n  \"last_update_date\": \"ex\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drugproduct?lang=en&type=json&id=<string>&din=<string>&brandname=<string>&status=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drugproduct"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "din",
									"value": "<string>"
								},
								{
									"key": "brandname",
									"value": "<string>"
								},
								{
									"key": "status",
									"value": "<integer>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drugproduct?lang=en&type=json&id=<string>&din=<string>&brandname=<string>&status=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drugproduct"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "din",
									"value": "<string>"
								},
								{
									"key": "brandname",
									"value": "<string>"
								},
								{
									"key": "status",
									"value": "<integer>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/drugProduct with DIN",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c30902a0-01ca-4224-9453-f6df0aee9093",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							"        \"items\": {\r",
							"        \"required\": [\r",
							"            \"drug_code\",\r",
							"            \"class_name\",\r",
							"            \"drug_identification_number\",\r",
							"            \"brand_name\",\r",
							"            \"descriptor\",\r",
							"            \"number_of_ais\",\r",
							"            \"ai_group_no\",\r",
							"            \"company_name\",\r",
							"            \"last_update_date\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"drug_code\": {\r",
							"                \"$id\": \"#/items/properties/drug_code\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"class_name\": {\r",
							"                \"$id\": \"#/items/properties/class_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"drug_identification_number\": {\r",
							"                \"$id\": \"#/items/properties/drug_identification_number\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"brand_name\": {\r",
							"                \"$id\": \"#/items/properties/brand_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"descriptor\": {\r",
							"                \"$id\": \"#/items/properties/descriptor\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"number_of_ais\": {\r",
							"                \"$id\": \"#/items/properties/number_of_ais\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"ai_group_no\": {\r",
							"                \"$id\": \"#/items/properties/ai_group_no\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"company_name\": {\r",
							"                \"$id\": \"#/items/properties/company_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"last_update_date\": {\r",
							"                \"$id\": \"#/items/properties/last_update_date\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"verify json values\", function(){\r",
							"  var jsonData = pm.response.json();  \r",
							"  \r",
							"   for (var i = 0; i < jsonData.length; i++) \r",
							"    {\r",
							"        var counter = jsonData[i];\r",
							"        var drug_identification_number = counter.drug_identification_number;        \r",
							"        pm.expect(drug_identification_number).to.be.eql(pm.variables.get(\"din\"));\r",
							"    } \r",
							"   \r",
							"});\r",
							"\r",
							"if (pm.globals.get(\"language\") == \"en\"){\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();    \r",
							"    pm.expect(jsonData[0].drug_code).to.eql(37743);   \r",
							"     pm.expect(jsonData[0].class_name).to.eql(\"Disinfectant\");    \r",
							"     pm.expect(jsonData[0].drug_identification_number).to.eql(\"02190826\");   \r",
							"     pm.expect(jsonData[0].brand_name).to.eql(\"GENIE PLUS - LIQ\");  \r",
							"     pm.expect(jsonData[0].ai_group_no).to.eql(\"0228121001\");   \r",
							"     pm.expect(jsonData[0].company_name).to.eql(\"GERMIPHENE CORPORATION\");   \r",
							"     pm.expect(jsonData[0].last_update_date).to.eql(\"2004-08-08\");   \r",
							"     \r",
							"     pm.globals.set(\"language\",\"fr\"); \r",
							"});\r",
							"}\r",
							"else{\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();    \r",
							"     pm.expect(jsonData[0].drug_code).to.eql(37743);   \r",
							"     pm.expect(jsonData[0].class_name).to.eql(\"Désinfectant\");    \r",
							"     pm.expect(jsonData[0].drug_identification_number).to.eql(\"02190826\");   \r",
							"     pm.expect(jsonData[0].brand_name).to.eql(\"GENIE PLUS - LIQ\");  \r",
							"     pm.expect(jsonData[0].ai_group_no).to.eql(\"0228121001\");   \r",
							"     pm.expect(jsonData[0].company_name).to.eql(\"GERMIPHENE CORPORATION\");   \r",
							"     pm.expect(jsonData[0].last_update_date).to.eql(\"2004-08-08\");    \r",
							"     pm.globals.set(\"language\",\"en\");\r",
							"});\r",
							"}\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "8d89958b-4aee-4624-a9b0-d3e3c5fb5d6f",
						"exec": [
							"//pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"drugproduct\");\r",
							"pm.variables.set(\"din\",\"02190826\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "d2b34316bbb9950755c8985742eeb020",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&din={{din}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}"
						},
						{
							"key": "din",
							"value": "{{din}}"
						}
					]
				},
				"description": "Returns all drug products."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drugproduct?lang=en&type=json&id=<string>&din=<string>&brandname=<string>&status=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drugproduct"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "din",
									"value": "<string>"
								},
								{
									"key": "brandname",
									"value": "<string>"
								},
								{
									"key": "status",
									"value": "<integer>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drugproduct?lang=en&type=json&id=<string>&din=<string>&brandname=<string>&status=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drugproduct"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "din",
									"value": "<string>"
								},
								{
									"key": "brandname",
									"value": "<string>"
								},
								{
									"key": "status",
									"value": "<integer>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all matching drug products",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drugproduct?lang=en&type=json&id=<string>&din=<string>&brandname=<string>&status=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drugproduct"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "din",
									"value": "<string>"
								},
								{
									"key": "brandname",
									"value": "<string>"
								},
								{
									"key": "status",
									"value": "<integer>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"ai_group_no\": \"amet\",\n  \"brand_name\": \"ipsum amet deserunt\",\n  \"class_name\": \"dolore consequat\",\n  \"descriptor\": \"aliquip in ut eu\",\n  \"drug_code\": 37523909,\n  \"drug_identification_number\": \"Ut occaecat in\",\n  \"number_of_ais\": \"ad dolor ea fugiat\",\n  \"company_name\": \"Excepteur do\",\n  \"last_update_date\": \"enim do mollit\"\n },\n {\n  \"ai_group_no\": \"sed\",\n  \"brand_name\": \"reprehenderit culpa\",\n  \"class_name\": \"sint sunt\",\n  \"descriptor\": \"incididunt ut laborum ullamco\",\n  \"drug_code\": 91739034,\n  \"drug_identification_number\": \"nostrud nisi dolor\",\n  \"number_of_ais\": \"dolor esse\",\n  \"company_name\": \"commodo dolore nisi ut\",\n  \"last_update_date\": \"ex\"\n }\n]"
				}
			]
		},
		{
			"name": "/drugProduct with brand name",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9fe202e7-4285-4464-b742-e333a63b4ad4",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							"        \"items\": {\r",
							"        \"required\": [\r",
							"            \"drug_code\",\r",
							"            \"class_name\",\r",
							"            \"drug_identification_number\",\r",
							"            \"brand_name\",\r",
							"            \"descriptor\",\r",
							"            \"number_of_ais\",\r",
							"            \"ai_group_no\",\r",
							"            \"company_name\",\r",
							"            \"last_update_date\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"drug_code\": {\r",
							"                \"$id\": \"#/items/properties/drug_code\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"class_name\": {\r",
							"                \"$id\": \"#/items/properties/class_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"drug_identification_number\": {\r",
							"                \"$id\": \"#/items/properties/drug_identification_number\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"brand_name\": {\r",
							"                \"$id\": \"#/items/properties/brand_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"descriptor\": {\r",
							"                \"$id\": \"#/items/properties/descriptor\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"number_of_ais\": {\r",
							"                \"$id\": \"#/items/properties/number_of_ais\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"ai_group_no\": {\r",
							"                \"$id\": \"#/items/properties/ai_group_no\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"company_name\": {\r",
							"                \"$id\": \"#/items/properties/company_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"last_update_date\": {\r",
							"                \"$id\": \"#/items/properties/last_update_date\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"pm.test(\"verify json values\", function(){\r",
							"  var jsonData = pm.response.json();  \r",
							"  \r",
							"   for (var i = 0; i < jsonData.length; i++) \r",
							"    {\r",
							"        var counter = jsonData[i];\r",
							"        var brand_name = counter.brand_name;        \r",
							"        pm.expect(brand_name.toUpperCase()).to.include(pm.variables.get(\"brandname\").toUpperCase());\r",
							"    } \r",
							"   \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "510b492a-bcea-429d-beaa-12423874ee42",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"drugproduct\");\r",
							"pm.variables.set(\"brandname\",\"3TC\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "d2b34316bbb9950755c8985742eeb020",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&brandname={{brandname}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}"
						},
						{
							"key": "brandname",
							"value": "{{brandname}}"
						}
					]
				},
				"description": "Returns all drug products."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drugproduct?lang=en&type=json&id=<string>&din=<string>&brandname=<string>&status=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drugproduct"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "din",
									"value": "<string>"
								},
								{
									"key": "brandname",
									"value": "<string>"
								},
								{
									"key": "status",
									"value": "<integer>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drugproduct?lang=en&type=json&id=<string>&din=<string>&brandname=<string>&status=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drugproduct"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "din",
									"value": "<string>"
								},
								{
									"key": "brandname",
									"value": "<string>"
								},
								{
									"key": "status",
									"value": "<integer>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all matching drug products",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drugproduct?lang=en&type=json&id=<string>&din=<string>&brandname=<string>&status=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drugproduct"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "din",
									"value": "<string>"
								},
								{
									"key": "brandname",
									"value": "<string>"
								},
								{
									"key": "status",
									"value": "<integer>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"ai_group_no\": \"amet\",\n  \"brand_name\": \"ipsum amet deserunt\",\n  \"class_name\": \"dolore consequat\",\n  \"descriptor\": \"aliquip in ut eu\",\n  \"drug_code\": 37523909,\n  \"drug_identification_number\": \"Ut occaecat in\",\n  \"number_of_ais\": \"ad dolor ea fugiat\",\n  \"company_name\": \"Excepteur do\",\n  \"last_update_date\": \"enim do mollit\"\n },\n {\n  \"ai_group_no\": \"sed\",\n  \"brand_name\": \"reprehenderit culpa\",\n  \"class_name\": \"sint sunt\",\n  \"descriptor\": \"incididunt ut laborum ullamco\",\n  \"drug_code\": 91739034,\n  \"drug_identification_number\": \"nostrud nisi dolor\",\n  \"number_of_ais\": \"dolor esse\",\n  \"company_name\": \"commodo dolore nisi ut\",\n  \"last_update_date\": \"ex\"\n }\n]"
				}
			]
		},
		{
			"name": "/drugproduct with id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9980e559-8de9-4a6d-aa40-e7a5ba42b1bd",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							"    \"required\": [\r",
							"        \"drug_code\",\r",
							"        \"class_name\",\r",
							"        \"drug_identification_number\",\r",
							"        \"brand_name\",\r",
							"        \"descriptor\",\r",
							"        \"number_of_ais\",\r",
							"        \"ai_group_no\",\r",
							"        \"company_name\",\r",
							"        \"last_update_date\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"drug_code\": {\r",
							"            \"$id\": \"#/properties/drug_code\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"class_name\": {\r",
							"            \"$id\": \"#/properties/class_name\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"drug_identification_number\": {\r",
							"            \"$id\": \"#/properties/drug_identification_number\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"brand_name\": {\r",
							"            \"$id\": \"#/properties/brand_name\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"descriptor\": {\r",
							"            \"$id\": \"#/properties/descriptor\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"number_of_ais\": {\r",
							"            \"$id\": \"#/properties/number_of_ais\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"ai_group_no\": {\r",
							"            \"$id\": \"#/properties/ai_group_no\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"company_name\": {\r",
							"            \"$id\": \"#/properties/company_name\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"last_update_date\": {\r",
							"            \"$id\": \"#/properties/last_update_date\",\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"object\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"\r",
							"if (pm.globals.get(\"language\") == \"en\"){\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();    \r",
							"   \r",
							"     pm.expect(jsonData.drug_code).to.eql(20189);   \r",
							"     pm.expect(jsonData.class_name).to.eql(\"Human\");    \r",
							"     pm.expect(jsonData.drug_identification_number).to.eql(\"02195933\");   \r",
							"     pm.expect(jsonData.brand_name).to.eql(\"APO-LEVOCARB - TAB 10MG/100MG\");  \r",
							"     pm.expect(jsonData.ai_group_no).to.eql(\"0210315002\");   \r",
							"     pm.expect(jsonData.company_name).to.eql(\"APOTEX INC\");   \r",
							"     pm.expect(jsonData.last_update_date).to.eql(\"2008-05-09\");    \r",
							"     pm.globals.set(\"language\",\"fr\"); \r",
							"});\r",
							"}\r",
							"else{\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();    \r",
							"     pm.expect(jsonData.drug_code).to.eql(20189);   \r",
							"     pm.expect(jsonData.class_name).to.eql(\"Humain\");    \r",
							"     pm.expect(jsonData.drug_identification_number).to.eql(\"02195933\");   \r",
							"     pm.expect(jsonData.brand_name).to.eql(\"APO-LEVOCARB - TAB 10MG/100MG\");  \r",
							"     pm.expect(jsonData.ai_group_no).to.eql(\"0210315002\");   \r",
							"     pm.expect(jsonData.company_name).to.eql(\"APOTEX INC\");   \r",
							"     pm.expect(jsonData.last_update_date).to.eql(\"2008-05-09\");    \r",
							"     pm.globals.set(\"language\",\"en\");\r",
							"});\r",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "4434bd90-080c-440a-91fd-9154ecb45f2c",
						"exec": [
							"//pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"drugproduct\");\r",
							"pm.variables.set(\"id\",\"20189\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "d2b34316bbb9950755c8985742eeb020",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&id={{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}"
						},
						{
							"key": "id",
							"value": "{{id}}"
						}
					]
				},
				"description": "Returns all drug products."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drugproduct?lang=en&type=json&id=<string>&din=<string>&brandname=<string>&status=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drugproduct"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "din",
									"value": "<string>"
								},
								{
									"key": "brandname",
									"value": "<string>"
								},
								{
									"key": "status",
									"value": "<integer>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all matching drug products",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drugproduct?lang=en&type=json&id=<string>&din=<string>&brandname=<string>&status=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drugproduct"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "din",
									"value": "<string>"
								},
								{
									"key": "brandname",
									"value": "<string>"
								},
								{
									"key": "status",
									"value": "<integer>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"ai_group_no\": \"amet\",\n  \"brand_name\": \"ipsum amet deserunt\",\n  \"class_name\": \"dolore consequat\",\n  \"descriptor\": \"aliquip in ut eu\",\n  \"drug_code\": 37523909,\n  \"drug_identification_number\": \"Ut occaecat in\",\n  \"number_of_ais\": \"ad dolor ea fugiat\",\n  \"company_name\": \"Excepteur do\",\n  \"last_update_date\": \"enim do mollit\"\n },\n {\n  \"ai_group_no\": \"sed\",\n  \"brand_name\": \"reprehenderit culpa\",\n  \"class_name\": \"sint sunt\",\n  \"descriptor\": \"incididunt ut laborum ullamco\",\n  \"drug_code\": 91739034,\n  \"drug_identification_number\": \"nostrud nisi dolor\",\n  \"number_of_ais\": \"dolor esse\",\n  \"company_name\": \"commodo dolore nisi ut\",\n  \"last_update_date\": \"ex\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drugproduct?lang=en&type=json&id=<string>&din=<string>&brandname=<string>&status=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drugproduct"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "din",
									"value": "<string>"
								},
								{
									"key": "brandname",
									"value": "<string>"
								},
								{
									"key": "status",
									"value": "<integer>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/form",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6ce90345-b157-4d1e-9a99-16392cb95712",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							" \"items\": {\r",
							"        \"required\": [\r",
							"            \"drug_code\",\r",
							"            \"pharmaceutical_form_code\",\r",
							"            \"pharmaceutical_form_name\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"drug_code\": {\r",
							"                \"$id\": \"#/items/properties/drug_code\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"pharmaceutical_form_code\": {\r",
							"                \"$id\": \"#/items/properties/pharmaceutical_form_code\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"pharmaceutical_form_name\": {\r",
							"                \"$id\": \"#/items/properties/pharmaceutical_form_name\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "135bf534-6b80-4e2d-ae60-19e7a947fe81",
						"exec": [
							"//pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"form\");\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "d2b34316bbb9950755c8985742eeb020",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}"
						}
					]
				},
				"description": "Returns all dosage forms."
			},
			"response": [
				{
					"name": "Returns a list of all matching dosage forms",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/form?lang=en&type=json&id=<string>&active=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"form"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "active",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"drug_code\": 49947855,\n  \"pharmaceutical_form_code\": \"Excepteur ipsum ut minim\",\n  \"pharmaceutical_form_name\": \"magna tempor ut\"\n },\n {\n  \"drug_code\": -12915205,\n  \"pharmaceutical_form_code\": \"nulla Excepteur sit\",\n  \"pharmaceutical_form_name\": \"dolore id cupidatat ex Duis\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/form?lang=en&type=json&id=<string>&active=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"form"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "active",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/form?lang=en&type=json&id=<string>&active=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"form"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "active",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/form with id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "964663b1-3a14-468f-9796-7948bcbed1e4",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							" \"items\": {\r",
							"        \"required\": [\r",
							"            \"drug_code\",\r",
							"            \"pharmaceutical_form_code\",\r",
							"            \"pharmaceutical_form_name\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"drug_code\": {\r",
							"                \"$id\": \"#/items/properties/drug_code\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"pharmaceutical_form_code\": {\r",
							"                \"$id\": \"#/items/properties/pharmaceutical_form_code\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"pharmaceutical_form_name\": {\r",
							"                \"$id\": \"#/items/properties/pharmaceutical_form_name\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"if (pm.globals.get(\"language\") == \"en\"){\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();    \r",
							"    pm.expect(jsonData[0].drug_code).to.eql(15843);   \r",
							"    pm.expect(jsonData[0].pharmaceutical_form_name).to.eql(\"Tablet\");   \r",
							"    \r",
							"     pm.globals.set(\"language\",\"fr\"); \r",
							"});\r",
							"}\r",
							"else{\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();    \r",
							"    pm.expect(jsonData[0].drug_code).to.eql(15843);   \r",
							"    pm.expect(jsonData[0].pharmaceutical_form_name).to.eql(\"Comprimé\");   \r",
							"    pm.globals.set(\"language\",\"en\");\r",
							"});\r",
							"}\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "e0a6d166-27a7-4a21-b6ec-537b3daa333f",
						"exec": [
							"//pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"form\");\r",
							"pm.variables.set(\"id\",\"15843\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "d2b34316bbb9950755c8985742eeb020",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&id={{id}}&active='yes'",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						},
						{
							"key": "id",
							"value": "{{id}}"
						},
						{
							"key": "active",
							"value": "'yes'"
						}
					]
				},
				"description": "Returns all dosage forms."
			},
			"response": [
				{
					"name": "Returns a list of all matching dosage forms",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/form?lang=en&type=json&id=<string>&active=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"form"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "active",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"drug_code\": 49947855,\n  \"pharmaceutical_form_code\": \"Excepteur ipsum ut minim\",\n  \"pharmaceutical_form_name\": \"magna tempor ut\"\n },\n {\n  \"drug_code\": -12915205,\n  \"pharmaceutical_form_code\": \"nulla Excepteur sit\",\n  \"pharmaceutical_form_name\": \"dolore id cupidatat ex Duis\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/form?lang=en&type=json&id=<string>&active=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"form"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "active",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/form?lang=en&type=json&id=<string>&active=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"form"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "active",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/packaging",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "656a7355-56a8-4096-bee0-37cd519d3016",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							"\"items\": {\r",
							"        \"required\": [\r",
							"            \"drug_code\",\r",
							"            \"upc\",\r",
							"            \"package_size_unit\",\r",
							"            \"package_type\",\r",
							"            \"package_size\",\r",
							"            \"product_information\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"drug_code\": {\r",
							"                \"$id\": \"#/items/properties/drug_code\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"upc\": {\r",
							"                \"$id\": \"#/items/properties/upc\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"package_size_unit\": {\r",
							"                \"$id\": \"#/items/properties/package_size_unit\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"package_type\": {\r",
							"                \"$id\": \"#/items/properties/package_type\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"package_size\": {\r",
							"                \"$id\": \"#/items/properties/package_size\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"product_information\": {\r",
							"                \"$id\": \"#/items/properties/product_information\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "63239cf0-61a4-4d2d-a0b3-583d34674d38",
						"exec": [
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"packaging\");\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "d2b34316bbb9950755c8985742eeb020",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?&type={{type}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": null,
							"value": null
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						}
					]
				},
				"description": "Returns all packaging information for drug products."
			},
			"response": [
				{
					"name": "Returns a list of all packaging information, or if an ID is provided, the list of all packaging information that corresponds to the given drug product code",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/packaging?type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"packaging"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"drug_code\": -6290575,\n  \"package_size\": \"irure laboris proident\",\n  \"package_size_unit\": \"adipisicing\",\n  \"package_type\": \"Excepteur\",\n  \"product_information\": \"ipsum in\",\n  \"upc\": \"sit\"\n },\n {\n  \"drug_code\": -85411416,\n  \"package_size\": \"mollit Duis\",\n  \"package_size_unit\": \"dolore\",\n  \"package_type\": \"fugiat \",\n  \"product_information\": \"dolor elit fugiat\",\n  \"upc\": \"consequat Lorem anim dolor Ut\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/packaging?type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"packaging"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/packaging?type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"packaging"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/packaging with id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8e2941a0-d54c-48b0-bf2f-a389e093fb13",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							"\"required\": [\r",
							"        \"drug_code\",\r",
							"        \"upc\",\r",
							"        \"package_size_unit\",\r",
							"        \"package_type\",\r",
							"        \"package_size\",\r",
							"        \"product_information\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"drug_code\": {\r",
							"            \"$id\": \"#/properties/drug_code\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"upc\": {\r",
							"            \"$id\": \"#/properties/upc\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"package_size_unit\": {\r",
							"            \"$id\": \"#/properties/package_size_unit\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"package_type\": {\r",
							"            \"$id\": \"#/properties/package_type\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"package_size\": {\r",
							"            \"$id\": \"#/properties/package_size\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"product_information\": {\r",
							"            \"$id\": \"#/properties/product_information\",\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"object\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();    \r",
							"     pm.expect(jsonData.drug_code).to.eql(pm.variables.get(\"id\"));   \r",
							"     pm.expect(jsonData.package_size_unit ).to.eql(\"L\");    \r",
							"     pm.expect(jsonData.package_type).to.eql(\"Bottle\");   \r",
							"     pm.expect(jsonData.package_size).to.eql(\"1-100\");  \r",
							"    \r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "55d0ff3b-c8ca-4f55-91c7-54456d0f2236",
						"exec": [
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"packaging\");\r",
							"pm.variables.set(\"id\",53001);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "d2b34316bbb9950755c8985742eeb020",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?&type={{type}}&id={{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": null,
							"value": null
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						},
						{
							"key": "id",
							"value": "{{id}}",
							"description": "Limit results to those with matching drug product code"
						}
					]
				},
				"description": "Returns all packaging information for drug products."
			},
			"response": [
				{
					"name": "Returns a list of all packaging information, or if an ID is provided, the list of all packaging information that corresponds to the given drug product code",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/packaging?type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"packaging"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"drug_code\": -6290575,\n  \"package_size\": \"irure laboris proident\",\n  \"package_size_unit\": \"adipisicing\",\n  \"package_type\": \"Excepteur\",\n  \"product_information\": \"ipsum in\",\n  \"upc\": \"sit\"\n },\n {\n  \"drug_code\": -85411416,\n  \"package_size\": \"mollit Duis\",\n  \"package_size_unit\": \"dolore\",\n  \"package_type\": \"fugiat \",\n  \"product_information\": \"dolor elit fugiat\",\n  \"upc\": \"consequat Lorem anim dolor Ut\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/packaging?type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"packaging"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/packaging?type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"packaging"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/pharmaceuticalstd",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4e32cfd0-ee2e-496a-90ef-9ba83ccac9ce",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							" \"items\": {\r",
							"        \"required\": [\r",
							"            \"drug_code\",\r",
							"            \"pharmaceutical_std\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"drug_code\": {\r",
							"                \"$id\": \"#/items/properties/drug_code\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"pharmaceutical_std\": {\r",
							"                \"$id\": \"#/items/properties/pharmaceutical_std\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "011f3c48-dad5-47a2-a1b1-6ebbfeb5fe7d",
						"exec": [
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"pharmaceuticalstd\");\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "d2b34316bbb9950755c8985742eeb020",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?&type={{type}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": null,
							"value": null
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						}
					]
				},
				"description": "Returns all dosage forms."
			},
			"response": [
				{
					"name": "Returns a list of all pharmaceutical standards, or if an ID is provided, the list of all pharmaceutical standards that correspond to the given drug product code",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pharmaceuticalstd?type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pharmaceuticalstd"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"drug_code\": 84180955,\n  \"pharmaceutical_std\": \"ullamco aliq\"\n },\n {\n  \"drug_code\": 89255760,\n  \"pharmaceutical_std\": \"in esse id\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pharmaceuticalstd?type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pharmaceuticalstd"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pharmaceuticalstd?type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pharmaceuticalstd"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/pharmaceuticalstd with id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0780723c-4e0b-4a63-83b9-25f1c8bc405c",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							" \"required\": [\r",
							"        \"drug_code\",\r",
							"        \"pharmaceutical_std\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"drug_code\": {\r",
							"            \"$id\": \"#/properties/drug_code\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"pharmaceutical_std\": {\r",
							"            \"$id\": \"#/properties/pharmaceutical_std\",\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"object\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							"\r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();    \r",
							"     pm.expect(jsonData.drug_code).to.eql(pm.variables.get(\"id\"));   \r",
							"     pm.expect(jsonData.pharmaceutical_std).to.eql(\"MFR\");       \r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "49748497-70a5-41ec-970f-488ef7b816f8",
						"exec": [
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"pharmaceuticalstd\");\r",
							"pm.variables.set(\"id\",20328);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "d2b34316bbb9950755c8985742eeb020",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?&type={{type}}&id={{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": null,
							"value": null
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						},
						{
							"key": "id",
							"value": "{{id}}",
							"description": "Limit results to those with matching drug product code"
						}
					]
				},
				"description": "Returns all dosage forms."
			},
			"response": [
				{
					"name": "Returns a list of all pharmaceutical standards, or if an ID is provided, the list of all pharmaceutical standards that correspond to the given drug product code",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pharmaceuticalstd?type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pharmaceuticalstd"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"drug_code\": 84180955,\n  \"pharmaceutical_std\": \"ullamco aliq\"\n },\n {\n  \"drug_code\": 89255760,\n  \"pharmaceutical_std\": \"in esse id\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pharmaceuticalstd?type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pharmaceuticalstd"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pharmaceuticalstd?type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pharmaceuticalstd"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/route",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "170467c9-1d4c-4e08-af90-26a28caa7363",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							" \"items\": {\r",
							"        \"required\": [\r",
							"            \"drug_code\",\r",
							"            \"route_of_administration_code\",\r",
							"            \"route_of_administration_name\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"drug_code\": {\r",
							"                \"$id\": \"#/items/properties/drug_code\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"route_of_administration_code\": {\r",
							"                \"$id\": \"#/items/properties/route_of_administration_code\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"route_of_administration_name\": {\r",
							"                \"$id\": \"#/items/properties/route_of_administration_name\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "e6dd1ea7-fc0c-4e29-938f-198a7c525597",
						"exec": [
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.variables.set(\"path\",\"route\");\r",
							"//pm.variables.set(\"id\",\"20328\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "d2b34316bbb9950755c8985742eeb020",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}"
						}
					]
				},
				"description": "Returns all routes of administration."
			},
			"response": [
				{
					"name": "Returns a list of all matching routes of administration",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/route?lang=en&type=json&id=<string>&active=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"route"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "active",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"drug_code\": 85285575,\n  \"route_of_administration_code\": 95624781,\n  \"route_of_administration_name\": \"ut consequat Ut\"\n },\n {\n  \"drug_code\": 62859383,\n  \"route_of_administration_code\": 98164949,\n  \"route_of_administration_name\": \"anim qui aliqua et sit\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/route?lang=en&type=json&id=<string>&active=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"route"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "active",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/route?lang=en&type=json&id=<string>&active=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"route"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "active",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/route with id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b8739a48-ec87-4e28-a1d9-69e0a9ea9c80",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							" \"items\": {\r",
							"        \"required\": [\r",
							"            \"drug_code\",\r",
							"            \"route_of_administration_code\",\r",
							"            \"route_of_administration_name\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"drug_code\": {\r",
							"                \"$id\": \"#/items/properties/drug_code\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"route_of_administration_code\": {\r",
							"                \"$id\": \"#/items/properties/route_of_administration_code\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"route_of_administration_name\": {\r",
							"                \"$id\": \"#/items/properties/route_of_administration_name\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"\r",
							"if (pm.globals.get(\"language\") == \"en\"){\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();    \r",
							"     pm.expect(jsonData[0].drug_code).to.eql(12791);   \r",
							"     pm.expect(jsonData[0].route_of_administration_name ).to.eql(\"Oral\");    \r",
							"     \r",
							"     pm.globals.set(\"language\",\"fr\"); \r",
							"});\r",
							"}\r",
							"else{\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();    \r",
							"     pm.expect(jsonData[0].drug_code).to.eql(12791);   \r",
							"     pm.expect(jsonData[0].route_of_administration_name ).to.eql(\"Orale\");   \r",
							"     pm.globals.set(\"language\",\"en\");\r",
							"});\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "4956ca35-47ae-4f27-a11f-f5bbf37584af",
						"exec": [
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"route\");\r",
							"pm.variables.set(\"id\",\"12791\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "d2b34316bbb9950755c8985742eeb020",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&id={{id}}&active='yes'",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						},
						{
							"key": "id",
							"value": "{{id}}",
							"description": "Limit results to those with matching drug product code"
						},
						{
							"key": "active",
							"value": "'yes'",
							"description": "Limit results to those routes of administration that are active, meaning they have a date that is greater than today or no date"
						}
					]
				},
				"description": "Returns all routes of administration."
			},
			"response": [
				{
					"name": "Returns a list of all matching routes of administration",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/route?lang=en&type=json&id=<string>&active=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"route"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "active",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"drug_code\": 85285575,\n  \"route_of_administration_code\": 95624781,\n  \"route_of_administration_name\": \"ut consequat Ut\"\n },\n {\n  \"drug_code\": 62859383,\n  \"route_of_administration_code\": 98164949,\n  \"route_of_administration_name\": \"anim qui aliqua et sit\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/route?lang=en&type=json&id=<string>&active=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"route"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "active",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/route?lang=en&type=json&id=<string>&active=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"route"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "active",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/schedule",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c9e03229-effd-4bfc-86e2-117e82dd5f48",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							"         \"items\": {\r",
							"        \"required\": [\r",
							"            \"drug_code\",\r",
							"            \"schedule_name\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"drug_code\": {\r",
							"                \"$id\": \"#/items/properties/drug_code\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"schedule_name\": {\r",
							"                \"$id\": \"#/items/properties/schedule_name\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "7b0ae8e1-94b6-4009-a10b-d4aad9c16fd5",
						"exec": [
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.variables.set(\"path\",\"schedule\");\r",
							"//pm.variables.set(\"id\",\"20328\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "d2b34316bbb9950755c8985742eeb020",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}"
						}
					]
				},
				"description": "Returns all schedules."
			},
			"response": [
				{
					"name": "Returns a list of all matching schedules",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/schedule?lang=en&type=json&id=<string>&active=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "active",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"drug_code\": 21068824,\n  \"schedule_name\": \"voluptate non Duis\"\n },\n {\n  \"drug_code\": 30147127,\n  \"schedule_name\": \"aliqua minim enim ex\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/schedule?lang=en&type=json&id=<string>&active=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "active",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/schedule?lang=en&type=json&id=<string>&active=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "active",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/schedule with id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e22ad80a-8ebb-441d-b1ac-7cb19a9fca5a",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							"         \"items\": {\r",
							"        \"required\": [\r",
							"            \"drug_code\",\r",
							"            \"schedule_name\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"drug_code\": {\r",
							"                \"$id\": \"#/items/properties/drug_code\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"schedule_name\": {\r",
							"                \"$id\": \"#/items/properties/schedule_name\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"if (pm.globals.get(\"language\") == \"en\"){\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();    \r",
							"     pm.expect(jsonData[0].drug_code).to.eql(pm.variables.get(\"id\"));   \r",
							"     pm.expect(jsonData[0].schedule_name ).to.eql(\"Prescription\");    \r",
							"       pm.globals.set(\"language\",\"fr\"); \r",
							"});\r",
							"}\r",
							"else{\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();    \r",
							"     pm.expect(jsonData[0].drug_code).to.eql(pm.variables.get(\"id\"));   \r",
							"     pm.expect(jsonData[0].schedule_name).to.eql(\"Prescription\");\r",
							"     pm.globals.set(\"language\",\"en\");\r",
							"});\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "13c0ae58-5e63-486b-85f5-3c4adc7a94a1",
						"exec": [
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"schedule\");\r",
							"pm.variables.set(\"id\",11118);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "d2b34316bbb9950755c8985742eeb020",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&id={{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						},
						{
							"key": "id",
							"value": "{{id}}",
							"description": "Limit results to those with matching drug product code"
						}
					]
				},
				"description": "Returns all schedules."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/schedule?lang=en&type=json&id=<string>&active=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "active",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/schedule?lang=en&type=json&id=<string>&active=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "active",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all matching schedules",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/schedule?lang=en&type=json&id=<string>&active=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "active",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"drug_code\": 21068824,\n  \"schedule_name\": \"voluptate non Duis\"\n },\n {\n  \"drug_code\": 30147127,\n  \"schedule_name\": \"aliqua minim enim ex\"\n }\n]"
				}
			]
		},
		{
			"name": "/status",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "00ab8716-4339-4c50-bf1b-985f20dc536c",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							"         \"items\": {\r",
							"     \"required\": [\r",
							"        \"drug_code\",\r",
							"        \"status\",\r",
							"        \"history_date\",\r",
							"        \"original_market_date\",\r",
							"        \"external_status_code\",\r",
							"        \"expiration_date\",\r",
							"        \"lot_number\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"drug_code\": {\r",
							"            \"$id\": \"#/properties/drug_code\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"status\": {\r",
							"            \"$id\": \"#/properties/status\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"history_date\": {\r",
							"            \"$id\": \"#/properties/history_date\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"original_market_date\": {\r",
							"            \"$id\": \"#/properties/original_market_date\",\r",
							"            \"type\": [\"string\", \"null\"]\r",
							"        },\r",
							"        \"external_status_code\": {\r",
							"            \"$id\": \"#/properties/external_status_code\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"expiration_date\": {\r",
							"            \"$id\": \"#/properties/expiration_date\",\r",
							"            \"type\": [\"string\", \"null\"]\r",
							"        },\r",
							"        \"lot_number\": {\r",
							"            \"$id\": \"#/properties/lot_number\",\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"     \"$id\": \"#/items\",\r",
							"     \"type\": \"object\"\r",
							"      },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//DEV test\r",
							"//var data = pm.response.json();\r",
							"//pm.test('Number of plans returned = ' + data.length, function () {\r",
							"//    pm.expect(data.length).to.equal(51275);\r",
							"//});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f03cf59b-95f2-4c78-95b1-1ceff82d6de8",
						"exec": [
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.variables.set(\"path\",\"status\");\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "d2b34316bbb9950755c8985742eeb020",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}"
						}
					]
				},
				"description": "Returns all product statuses."
			},
			"response": [
				{
					"name": "Returns a list of all product statuses, or if an ID is provided, the list of all product statuses that correspond to the given drug product code",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/status?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"drug_code\": -43655477,\n  \"expiration_date\": \"fugiat esse\",\n  \"external_status_code\": -99502517,\n  \"history_number\": \"exercitation sit\",\n  \"lot_number\": \"in velit\",\n  \"original_market_date\": \"culpa anim voluptate\",\n  \"status\": \"minim laboris incididunt\"\n },\n {\n  \"drug_code\": 83062477,\n  \"expiration_date\": \"Excepteur dolore\",\n  \"external_status_code\": -71421223,\n  \"history_number\": \"occaecat culpa veniam Excepteur adipisicing\",\n  \"lot_number\": \"adipisicing\",\n  \"original_market_date\": \"eiusmod in aliqua\",\n  \"status\": \"nisi proident qui\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/status?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/status?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/status with id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4c642f8b-db7b-4460-b597-07042dad1379",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							" \"required\": [\r",
							"        \"drug_code\",\r",
							"        \"status\",\r",
							"        \"history_date\",\r",
							"        \"original_market_date\",\r",
							"        \"external_status_code\",\r",
							"        \"expiration_date\",\r",
							"        \"lot_number\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"drug_code\": {\r",
							"            \"$id\": \"#/properties/drug_code\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"status\": {\r",
							"            \"$id\": \"#/properties/status\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"history_date\": {\r",
							"            \"$id\": \"#/properties/history_date\",\r",
							"           \"type\": [\"string\", \"null\"]\r",
							"        },\r",
							"        \"original_market_date\": {\r",
							"            \"$id\": \"#/properties/original_market_date\",\r",
							"            \"type\": [\"string\", \"null\"]\r",
							"        },\r",
							"        \"external_status_code\": {\r",
							"            \"$id\": \"#/properties/external_status_code\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"expiration_date\": {\r",
							"            \"$id\": \"#/properties/expiration_date\",\r",
							"           \"type\": [\"string\", \"null\"]\r",
							"        },\r",
							"        \"lot_number\": {\r",
							"            \"$id\": \"#/properties/lot_number\",\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"object\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"if (pm.globals.get(\"language\") == \"en\"){\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();    \r",
							"     pm.expect(jsonData.drug_code).to.eql(pm.variables.get(\"id\"));   \r",
							"     pm.expect(jsonData.status).to.eql(\"Cancelled Post Market\");     \r",
							"     pm.globals.set(\"language\",\"fr\"); \r",
							"});\r",
							"}\r",
							"else{\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();    \r",
							"    pm.expect(jsonData.drug_code).to.eql(pm.variables.get(\"id\"));   \r",
							"    pm.expect(jsonData.status).to.eql(\"Annulé après commercialisation\");   \r",
							"    pm.globals.set(\"language\",\"en\");\r",
							"});\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "12f825b5-900c-4070-8b2c-ffa2e9d52eef",
						"exec": [
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"status\");\r",
							"pm.variables.set(\"id\",2385);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "d2b34316bbb9950755c8985742eeb020",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&id={{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						},
						{
							"key": "id",
							"value": "{{id}}",
							"description": "Limit results to those with matching drug product code"
						}
					]
				},
				"description": "Returns all product statuses."
			},
			"response": [
				{
					"name": "Returns a list of all product statuses, or if an ID is provided, the list of all product statuses that correspond to the given drug product code",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/status?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"drug_code\": -43655477,\n  \"expiration_date\": \"fugiat esse\",\n  \"external_status_code\": -99502517,\n  \"history_number\": \"exercitation sit\",\n  \"lot_number\": \"in velit\",\n  \"original_market_date\": \"culpa anim voluptate\",\n  \"status\": \"minim laboris incididunt\"\n },\n {\n  \"drug_code\": 83062477,\n  \"expiration_date\": \"Excepteur dolore\",\n  \"external_status_code\": -71421223,\n  \"history_number\": \"occaecat culpa veniam Excepteur adipisicing\",\n  \"lot_number\": \"adipisicing\",\n  \"original_market_date\": \"eiusmod in aliqua\",\n  \"status\": \"nisi proident qui\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/status?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/status?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/therapeuticclass",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d53b8e98-4321-42f4-936b-5c7db75a2188",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							"         \"items\": {\r",
							"        \"required\": [\r",
							"            \"drug_code\",\r",
							"            \"tc_atc_number\",\r",
							"            \"tc_atc\",\r",
							"            \"tc_ahfs_number\",\r",
							"            \"tc_ahfs\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"drug_code\": {\r",
							"                \"$id\": \"#/items/properties/drug_code\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"tc_atc_number\": {\r",
							"                \"$id\": \"#/items/properties/tc_atc_number\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"tc_atc\": {\r",
							"                \"$id\": \"#/items/properties/tc_atc\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"tc_ahfs_number\": {\r",
							"                \"$id\": \"#/items/properties/tc_ahfs_number\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"tc_ahfs\": {\r",
							"                \"$id\": \"#/items/properties/tc_ahfs\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "a9d92a58-39df-4d9c-87e6-bc4f98114b80",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"therapeuticclass\");\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "d2b34316bbb9950755c8985742eeb020",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}"
						}
					]
				},
				"description": "Returns all therapeutic classes."
			},
			"response": [
				{
					"name": "Returns a list of all therapeutic classes, or if an ID is provided, the list of all therapeutic classes that correspond to the given drug product code",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/therapeuticclass?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"therapeuticclass"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"drug_code\": 96997176,\n  \"tc_ahfs\": \"ullamco amet sit ex ad\",\n  \"tc_ahfs_number\": \"quis ex\",\n  \"tc_atc\": \"non\",\n  \"tc_atc_number\": \"irure aute magna nisi\"\n },\n {\n  \"drug_code\": -44550946,\n  \"tc_ahfs\": \"cupidatat in fugiat pariatur\",\n  \"tc_ahfs_number\": \"in\",\n  \"tc_atc\": \"ut consequat in\",\n  \"tc_atc_number\": \"tempor laborum ea dolore\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/therapeuticclass?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"therapeuticclass"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/therapeuticclass?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"therapeuticclass"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/therapeuticclass with id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9bab32d5-b1c3-4000-b488-2454e503976b",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							"         \"items\": {\r",
							"        \"required\": [\r",
							"            \"drug_code\",\r",
							"            \"tc_atc_number\",\r",
							"            \"tc_atc\",\r",
							"            \"tc_ahfs_number\",\r",
							"            \"tc_ahfs\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"drug_code\": {\r",
							"                \"$id\": \"#/items/properties/drug_code\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"tc_atc_number\": {\r",
							"                \"$id\": \"#/items/properties/tc_atc_number\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"tc_atc\": {\r",
							"                \"$id\": \"#/items/properties/tc_atc\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"tc_ahfs_number\": {\r",
							"                \"$id\": \"#/items/properties/tc_ahfs_number\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"tc_ahfs\": {\r",
							"                \"$id\": \"#/items/properties/tc_ahfs\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"if (pm.globals.get(\"language\") == \"en\"){\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();   \r",
							"      pm.expect(jsonData[0].drug_code ).to.eql(pm.variables.get(\"id\"));  \r",
							"     pm.expect(jsonData[0].tc_atc ).to.eql(\"COMBINATIONS OF PROTECTIVES AGAINST UV-RADIATION\"); \r",
							"     pm.expect(jsonData[0].tc_ahfs_number ).to.eql(\"84:80.00\");  \r",
							"     pm.expect(jsonData[0].tc_ahfs).to.eql(\"SUNSCREEN AGENTS\");  \r",
							"     pm.globals.set(\"language\",\"fr\"); \r",
							"});\r",
							"}\r",
							"else{\r",
							"//with no French value, using English\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();     \r",
							"    pm.expect(jsonData[0].drug_code ).to.eql(pm.variables.get(\"id\"));   \r",
							"    pm.expect(jsonData[0].tc_atc).to.eql(\"COMBINATIONS OF PROTECTIVES AGAINST UV-RADIATION\"); \r",
							"     pm.expect(jsonData[0].tc_ahfs_number ).to.eql(\"84:80.00\");  \r",
							"     pm.expect(jsonData[0].tc_ahfs).to.eql(\"SUNSCREEN AGENTS\"); \r",
							"     pm.globals.set(\"language\",\"en\");\r",
							"});\r",
							"}\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "52abe60f-00b0-45d1-9e8c-514a7a7ec227",
						"exec": [
							"//pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"therapeuticclass\");\r",
							"pm.variables.set(\"id\",14252);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "d2b34316bbb9950755c8985742eeb020",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&id={{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						},
						{
							"key": "id",
							"value": "{{id}}",
							"description": "Limit results to those with matching drug product code"
						}
					]
				},
				"description": "Returns all therapeutic classes."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/therapeuticclass?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"therapeuticclass"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all therapeutic classes, or if an ID is provided, the list of all therapeutic classes that correspond to the given drug product code",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/therapeuticclass?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"therapeuticclass"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"drug_code\": 96997176,\n  \"tc_ahfs\": \"ullamco amet sit ex ad\",\n  \"tc_ahfs_number\": \"quis ex\",\n  \"tc_atc\": \"non\",\n  \"tc_atc_number\": \"irure aute magna nisi\"\n },\n {\n  \"drug_code\": -44550946,\n  \"tc_ahfs\": \"cupidatat in fugiat pariatur\",\n  \"tc_ahfs_number\": \"in\",\n  \"tc_atc\": \"ut consequat in\",\n  \"tc_atc_number\": \"tempor laborum ea dolore\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/therapeuticclass?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"therapeuticclass"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/veterinaryspecies",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "804b7260-94f0-4f23-97f0-91eb98d3bdc1",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							"         \"items\": {\r",
							"        \"required\": [\r",
							"            \"drug_code\",\r",
							"            \"vet_species_name\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"drug_code\": {\r",
							"                \"$id\": \"#/items/properties/drug_code\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"vet_species_name\": {\r",
							"                \"$id\": \"#/items/properties/vet_species_name\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "58aab177-9cff-40a5-bdf7-aabfc76c7188",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"veterinaryspecies\");\r",
							"//pm.variables.set(\"id\",14252);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "d2b34316bbb9950755c8985742eeb020",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}"
						}
					]
				},
				"description": "Returns all veterinary species."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/veterinaryspecies?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"veterinaryspecies"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all veterinary species, or if an ID is provided, the list of all veterinary species that correspond to the given drug product code",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/veterinaryspecies?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"veterinaryspecies"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"drug_code\": -71288320,\n  \"vet_species_name\": \"laborum pariatur Ut velit\"\n },\n {\n  \"drug_code\": 36556177,\n  \"vet_species_name\": \"adipisicing eiusmod\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/veterinaryspecies?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"veterinaryspecies"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/veterinaryspecies with id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7c22cdf8-b3c7-4183-8018-ceea94154df0",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							"         \"items\": {\r",
							"        \"required\": [\r",
							"            \"drug_code\",\r",
							"            \"vet_species_name\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"drug_code\": {\r",
							"                \"$id\": \"#/items/properties/drug_code\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"vet_species_name\": {\r",
							"                \"$id\": \"#/items/properties/vet_species_name\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"if (pm.globals.get(\"language\") == \"en\"){\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();    \r",
							"     pm.expect(jsonData[0].drug_code).to.eql(pm.variables.get(\"id\"));   \r",
							"     pm.expect(jsonData[0].vet_species_name ).to.eql(\"Cattle\");    \r",
							"     pm.expect(jsonData[1].drug_code).to.eql(pm.variables.get(\"id\"));   \r",
							"     pm.expect(jsonData[1].vet_species_name ).to.eql(\"Horses\");  \r",
							"     pm.expect(jsonData[2].drug_code).to.eql(pm.variables.get(\"id\"));   \r",
							"     pm.expect(jsonData[2].vet_species_name ).to.eql(\"Dogs\");  \r",
							"     pm.globals.set(\"language\",\"fr\"); \r",
							"});\r",
							"}\r",
							"else{\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();    \r",
							"     pm.expect(jsonData[0].drug_code).to.eql(pm.variables.get(\"id\"));   \r",
							"     pm.expect(jsonData[0].vet_species_name ).to.eql(\"Bétails\");    \r",
							"     pm.expect(jsonData[1].drug_code).to.eql(pm.variables.get(\"id\"));   \r",
							"     pm.expect(jsonData[1].vet_species_name ).to.eql(\"Cheveaux\");  \r",
							"     pm.expect(jsonData[2].drug_code).to.eql(pm.variables.get(\"id\"));   \r",
							"     pm.expect(jsonData[2].vet_species_name ).to.eql(\"Chiens\");   \r",
							"     pm.globals.set(\"language\",\"en\");\r",
							"});\r",
							"}\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "3f313439-f536-42f9-a1b8-b10c6172210b",
						"exec": [
							"//pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"veterinaryspecies\");\r",
							"pm.variables.set(\"id\",1999);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "d2b34316bbb9950755c8985742eeb020",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&id={{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}"
						},
						{
							"key": "id",
							"value": "{{id}}"
						}
					]
				},
				"description": "Returns all veterinary species."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/veterinaryspecies?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"veterinaryspecies"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/veterinaryspecies?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"veterinaryspecies"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all veterinary species, or if an ID is provided, the list of all veterinary species that correspond to the given drug product code",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/veterinaryspecies?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"veterinaryspecies"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"drug_code\": -71288320,\n  \"vet_species_name\": \"laborum pariatur Ut velit\"\n },\n {\n  \"drug_code\": 36556177,\n  \"vet_species_name\": \"adipisicing eiusmod\"\n }\n]"
				}
			]
		}
	],
	"variable": [
		{
			"id": "baseUrl",
			"key": "baseUrl",
			"value": "https://dpd-hc-sc-apicast-production.api.canada.ca/v1/",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}